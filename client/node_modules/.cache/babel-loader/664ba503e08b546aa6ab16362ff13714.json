{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\nexport const setErrors = err => {\n  return {\n    type: GET_ERRORS,\n    payload: err.response.data\n  };\n};\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/users/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch(setErrors(err)));\n};\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/users/login\", userData).then(res => {\n    const {\n      token\n    } = res.data;\n    localStorage.setItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decoded = jwt_decode(token);\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch(setErrors(err)));\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/Users/emersondowning/codeClass/Homework/Project3/client/src/authActions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","USER_LOADING","setCurrentUser","decoded","type","payload","setUserLoading","setErrors","err","response","data","registerUser","userData","history","dispatch","post","then","res","push","catch","loginUser","token","localStorage","setItem","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,YAAvC,QAA2D,SAA3D;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa;AACzC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,gBADD;AAELK,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,cAAc,GAAG,MAAM;AAClC,SAAO;AACLF,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMM,SAAS,GAAIC,GAAD,IAAS;AAChC,SAAO;AACLJ,IAAAA,IAAI,EAAEL,UADD;AAELM,IAAAA,OAAO,EAAEG,GAAG,CAACC,QAAJ,CAAaC;AAFjB,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAwBC,QAAD,IAAc;AAC/DlB,EAAAA,KAAK,CACFmB,IADH,CACQ,qBADR,EAC+BH,QAD/B,EAEGI,IAFH,CAESC,GAAD,IAASJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAFjB,EAGGC,KAHH,CAGUX,GAAD,IAASM,QAAQ,CAACP,SAAS,CAACC,GAAD,CAAV,CAH1B;AAID,CALM;AAOP,OAAO,MAAMY,SAAS,GAAIR,QAAD,IAAeE,QAAD,IAAc;AACnDlB,EAAAA,KAAK,CACFmB,IADH,CACQ,kBADR,EAC4BH,QAD5B,EAEGI,IAFH,CAESC,GAAD,IAAS;AACb,UAAM;AAAEI,MAAAA;AAAF,QAAYJ,GAAG,CAACP,IAAtB;AAEAY,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC;AACAxB,IAAAA,YAAY,CAACwB,KAAD,CAAZ;AAEA,UAAMlB,OAAO,GAAGL,UAAU,CAACuB,KAAD,CAA1B;AACAP,IAAAA,QAAQ,CAACZ,cAAc,CAACC,OAAD,CAAf,CAAR;AACD,GAVH,EAWGgB,KAXH,CAWUX,GAAD,IAASM,QAAQ,CAACP,SAAS,CAACC,GAAD,CAAV,CAX1B;AAYD,CAbM;AAeP,OAAO,MAAMgB,UAAU,GAAG,MAAOV,QAAD,IAAc;AAC5CQ,EAAAA,YAAY,CAACG,UAAb,CAAwB,UAAxB;AACA5B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAiB,EAAAA,QAAQ,CAACZ,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAJM","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from \"./types\";\n\nexport const setCurrentUser = (decoded) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  };\n};\n\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING,\n  };\n};\n\nexport const setErrors = (err) => {\n  return {\n    type: GET_ERRORS,\n    payload: err.response.data,\n  };\n};\n\nexport const registerUser = (userData, history) => (dispatch) => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then((res) => history.push(\"/login\"))\n    .catch((err) => dispatch(setErrors(err)));\n};\n\nexport const loginUser = (userData) => (dispatch) => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then((res) => {\n      const { token } = res.data;\n\n      localStorage.setItem(\"jwtToken\", token);\n      setAuthToken(token);\n\n      const decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch((err) => dispatch(setErrors(err)));\n};\n\nexport const logoutUser = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}